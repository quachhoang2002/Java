/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.EmployeeBus;
import DAO.EmployeeDAO;
import DTO.EmployeeDTO;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class EmployeeGUI extends javax.swing.JPanel {

    private DefaultTableModel tableModel;

    private void initializeGenderComboBox() {
        gender_cbx.setModel(new DefaultComboBoxModel<>(new String[]{"Male", "Female", "Other"}));
    }

    private void initializePositionComboBox() {
        position_cbx.setModel(new DefaultComboBoxModel<>(new String[]{"Manager", "Developer", "Sales", "HR"}));
    }

    /**
     * Creates new form ListEmployeePanel
     */
    public EmployeeGUI() {
        initComponents();
        initUI();
        setupTableSelectionListener();
    }

    private void initUI() {
//        setLayout(new BorderLayout());

        // Initialize table model
        if (employee_table == null) {
            // Initialize table model
            tableModel = new DefaultTableModel(new Object[]{"ID", "Name"}, 0);
            employee_table = new JTable(tableModel);
        } else {
            // Update the existing table model
            tableModel = (DefaultTableModel) employee_table.getModel();
        }

        loadData();
        initializeGenderComboBox();
        initializePositionComboBox();

        // Add a JScrollPane to manage table scrolling
//        JScrollPane scrollPane = new JScrollPane(employee_table);
//        add(scrollPane, BorderLayout.CENTER);
//
//        // Optionally, add a button to load or refresh the data
//        JButton loadButton = new JButton("Load Data");
//        loadButton.addActionListener(e -> loadData());
//        add(loadButton, BorderLayout.SOUTH);
    }

    // Method to update the table model
    public void updateTable(List<EmployeeDTO> employees) {
        // Clear the existing data
        tableModel.setRowCount(0);

        // Populate the table model
        for (EmployeeDTO employee : employees) {
            Object[] row = new Object[]{employee.getID(), employee.getName(), employee.getLastname(), employee.getGender(), employee.getPosition()};
            tableModel.addRow(row);
        }

    }

    private void loadData() {
        EmployeeDAO dao = new EmployeeDAO();
        List<EmployeeDTO> employees = dao.findByName("");
        updateTable(employees);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        employee_table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lastname = new javax.swing.JTextField();
        lastname_lb = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        lastname_lab = new javax.swing.JLabel();
        firstname_lb = new javax.swing.JLabel();
        gender_lb = new javax.swing.JLabel();
        posiotion_lb = new javax.swing.JLabel();
        create = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        gender_cbx = new javax.swing.JComboBox<>();
        position_cbx = new javax.swing.JComboBox<>();

        employee_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ma", "Ho", "Ten", "Gioi Tinh", "Chuc Vu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(employee_table);

        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });

        lastname_lb.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lastname_lb.setText("Quan Ly Nhan Vien");

        firstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameActionPerformed(evt);
            }
        });

        lastname_lab.setText("Ho");

        firstname_lb.setText("Ten");

        gender_lb.setText("Gioi Tinh");

        posiotion_lb.setText("Chuc Vu");

        create.setText("Tao tai khoan");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        update.setText("Cap Nhat");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete_btn.setText("Xoa");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        gender_cbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        gender_cbx.setToolTipText("");

        position_cbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Employee" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lastname_lab)
                            .addComponent(gender_lb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(gender_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(posiotion_lb))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(firstname_lb)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(firstname, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(position_cbx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(create)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update)
                        .addGap(18, 18, 18)
                        .addComponent(delete_btn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(lastname_lb)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lastname_lb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastname_lab)
                    .addComponent(firstname_lb))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender_lb)
                    .addComponent(posiotion_lb)
                    .addComponent(gender_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(position_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create)
                    .addComponent(update)
                    .addComponent(delete_btn))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void firstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameActionPerformed

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        // TODO add your handling code here:
        String firstName = firstname.getText().trim();
        String lastName = lastname.getText().trim();
        String genderStr = (String) gender_cbx.getSelectedItem();
        String positionStr = (String) position_cbx.getSelectedItem();

        // Create an EmployeeDTO object and set its properties
        EmployeeDTO employee = new EmployeeDTO();
        employee.setName(firstName);
        employee.setLastname(lastName);

        try {
            // Parse integer values safely
            int genderInt = position_cbx.getSelectedIndex();
            int positionInt = gender_cbx.getSelectedIndex();

            employee.setGender(genderInt);
            employee.setPosition(positionInt);
            EmployeeBus bus = new EmployeeBus();

            // Call the EmployeeService to create the employee
            if (bus.createEmployee(employee)) {
                JOptionPane.showMessageDialog(null, "Employee created successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to create employee.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Gender and Position must be valid integers.");
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        initUI();
    }//GEN-LAST:event_createActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String firstName = firstname.getText().trim();
        String lastName = lastname.getText().trim();
        int selectedRow = employee_table.getSelectedRow();
        int employeeId = (Integer) employee_table.getModel().getValueAt(selectedRow, 0);
        int genderInt = gender_cbx.getSelectedIndex();
        int positionInt = position_cbx.getSelectedIndex();

        try {
            EmployeeDTO employee = new EmployeeDTO();
            employee.setID(employeeId);  // Set the Employee ID for update
            employee.setName(firstName);
            employee.setLastname(lastName);
            employee.setGender(genderInt);
            employee.setPosition(positionInt);
            employee.getID();

            EmployeeBus bus = new EmployeeBus();
            if (bus.updateEmployee(employee)) {
                JOptionPane.showMessageDialog(null, "Employee updated successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update employee.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Gender and Position must be valid integers.");
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        initUI();  // Refresh the UI or close the update dialog
    }//GEN-LAST:event_updateActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        int selectedRow = employee_table.getSelectedRow();
        int employeeId = (Integer) employee_table.getModel().getValueAt(selectedRow, 0);

        EmployeeBus bus = new EmployeeBus();
        try {
            if (bus.deleteEmployee(employeeId)) {
                JOptionPane.showMessageDialog(null, "Employee deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to delete employee. No employee found with ID: " + employeeId);
            }
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
        
        initUI();
    }//GEN-LAST:event_delete_btnActionPerformed

    private void setupTableSelectionListener() {
        employee_table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) { // Prevent double events
                    displaySelectedEmployeeData();
                }
            }
        });
    }

    private void displaySelectedEmployeeData() {
        int selectedRow = employee_table.getSelectedRow();

        if (selectedRow != -1) { // Ensure a row is selected
            // Fetch data from the selected row
            int employeeId = (Integer) employee_table.getModel().getValueAt(selectedRow, 0);
            String fn = (String) employee_table.getModel().getValueAt(selectedRow, 1);
            String ln = (String) employee_table.getModel().getValueAt(selectedRow, 2);
            int gd = (Integer) employee_table.getModel().getValueAt(selectedRow, 3); // Gender as an integer index
            int posIndex = (Integer) employee_table.getModel().getValueAt(selectedRow, 4);

            firstname.setText(fn);
            lastname.setText(ln);
            position_cbx.setSelectedIndex(posIndex);
            gender_cbx.setSelectedIndex(gd);
            position_cbx.setSelectedIndex(posIndex);
        } else {
            firstname.setText("");
            lastname.setText("");
            gender_lb.setText("");
            gender_cbx.setSelectedIndex(-1);
            position_cbx.setSelectedIndex(-1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton create;
    private javax.swing.JButton delete_btn;
    private javax.swing.JTable employee_table;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel firstname_lb;
    private javax.swing.JComboBox<String> gender_cbx;
    private javax.swing.JLabel gender_lb;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lastname;
    private javax.swing.JLabel lastname_lab;
    private javax.swing.JLabel lastname_lb;
    private javax.swing.JLabel posiotion_lb;
    private javax.swing.JComboBox<String> position_cbx;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
